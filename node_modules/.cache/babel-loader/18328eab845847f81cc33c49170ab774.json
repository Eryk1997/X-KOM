{"ast":null,"code":"import axios from \"axios\";\nconst headers = {\n  \"Content-Type\": \"application/json\"\n};\nconst Seats = {\n  getAllSeats,\n  selectPlaceFalseCheckbox,\n  selectPlaceTrueCheckbox\n};\n\nasync function getAllSeats() {\n  const response = axios.get(\"http://localhost:3000/seats\");\n  return response;\n}\n\nasync function selectPlaceFalseCheckbox() {\n  const numberOfSets = window.localStorage.getItem(\"numberOfSets\");\n  const arraySeats = [];\n  let i = numberOfSets;\n  const respo = await getAllSeats();\n\n  while (i > 0) {\n    const positionY = Math.floor(Math.random() * (15 + 1));\n    const positionX = Math.floor(Math.random() * (11 + 1));\n    respo.data.map(item => {\n      if (item.cords.x == positionX && item.cords.y == positionY) {\n        let field = document.querySelector(`.${item.id}`);\n\n        if (field && item.reserved === false) {\n          const newObject = {\n            id: item.id,\n            x: item.cords.x,\n            y: item.cords.y\n          };\n          arraySeats.push(newObject);\n          field.style.background = \"chocolate\";\n          i--;\n        }\n      }\n    });\n  }\n\n  window.localStorage.setItem(\"places\", JSON.stringify(arraySeats));\n} // async function selectPlaceTrueCheckbox() {\n//   const numberOfSets = window.localStorage.getItem(\"numberOfSets\");\n//   let i = numberOfSets;\n//   let x = 1;\n//   const arraySeats = [];\n//   let indexFirst;\n//   let pom = false;\n//   const response = await getAllSeats();\n//   let positionY = Math.floor(Math.random() * (15 + 1));\n//   let positionX = Math.floor(Math.random() * (11 + 1));\n//   console.log(response.data);\n//   while (pom != true) {\n//     response.data.forEach((item, index) => {\n//       if (\n//         item.cords.y == positionY &&\n//         item.reserved == false &&\n//         item.cords.x == positionX\n//       ) {\n//         indexFirst = index;\n//         pom = true;\n//       } else {\n//         positionX = Math.floor(Math.random() * (11 + 1));\n//         positionY = Math.floor(Math.random() * (15 + 1));\n//       }\n//     });\n//   }\n//   console.log(response.data[indexFirst]);\n//   let pom2 = false\n//   for (\n//     let j = indexFirst;\n//     j < indexFirst + Number.parseInt(numberOfSets);\n//     j++\n//   ) {\n//     if (\n//       response.data[j].reserved == false &&\n//       j <= indexFirst + Number.parseInt(numberOfSets)\n//     ) {\n//       let field = document.querySelector(`.${response.data[j].id}`);\n//       const newObject = { id: response.data[j].id, x: response.data[j].cords.x, y: response.data[j].cords.y };\n//       arraySeats.push(newObject);\n//       field.style.background = \"chocolate\";\n//     }\n//   }\n//   window.localStorage.setItem(\"places\", JSON.stringify(arraySeats));\n// }\n\n\nconst getIndexPlace = async () => {\n  let statusIndex = false;\n  let positionY = Math.floor(Math.random() * (15 + 1));\n  let positionX = Math.floor(Math.random() * (11 + 1));\n  const response = await getAllSeats();\n  let indexFirst;\n\n  while (statusIndex != true) {\n    response.data.forEach((item, index) => {\n      if (item.cords.y == positionY && item.reserved == false && item.cords.x == positionX) {\n        indexFirst = index;\n        statusIndex = true;\n      } else {\n        positionX = Math.floor(Math.random() * (11 + 1));\n        positionY = Math.floor(Math.random() * (15 + 1));\n      }\n    });\n  }\n\n  return indexFirst;\n};\n\nasync function selectPlaceTrueCheckbox() {\n  let statusFinish = false;\n  let indexPlace = await getIndexPlace();\n  let numberOfSets = Number.parseInt(window.localStorage.getItem(\"numberOfSets\"));\n  const response = await getAllSeats();\n  let positionYFirstElement;\n  let positionYNextElement;\n  let sum;\n  let incrementValue = 0;\n  let arraySeats = [];\n\n  while (statusFinish != true) {\n    for (let i = indexPlace; i < indexPlace + numberOfSets; i++) {\n      positionYFirstElement = Number.parseInt(response.data[i].cords.y);\n      positionYNextElement = Number.parseInt(response.data[i + 1].cords.y);\n      sum = positionYNextElement - positionYFirstElement;\n\n      if (response.data[i].reserved === false && sum === 1) {\n        const newObject = {\n          id: response.data[i].id,\n          x: response.data[i].cords.x,\n          y: response.data[i].cords.y\n        };\n        arraySeats.push(newObject);\n        incrementValue += 1;\n      }\n\n      console.log(\"incrementValue\" + incrementValue);\n      console.log(\"numberOfSets\" + numberOfSets);\n\n      if (incrementValue === numberOfSets) {\n        statusFinish = true;\n      } else {\n        arraySeats = [];\n        indexPlace = await getIndexPlace();\n        incrementValue = 0;\n        statusFinish = false;\n      }\n    } //statusFinish = true;\n\n  }\n}\n\nexport default Seats;","map":{"version":3,"sources":["/home/eryk/Dokumenty/x-kom/my-app/src/service/Seats.js"],"names":["axios","headers","Seats","getAllSeats","selectPlaceFalseCheckbox","selectPlaceTrueCheckbox","response","get","numberOfSets","window","localStorage","getItem","arraySeats","i","respo","positionY","Math","floor","random","positionX","data","map","item","cords","x","y","field","document","querySelector","id","reserved","newObject","push","style","background","setItem","JSON","stringify","getIndexPlace","statusIndex","indexFirst","forEach","index","statusFinish","indexPlace","Number","parseInt","positionYFirstElement","positionYNextElement","sum","incrementValue","console","log"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst headers = {\n  \"Content-Type\": \"application/json\",\n};\n\nconst Seats = {\n  getAllSeats,\n  selectPlaceFalseCheckbox,\n  selectPlaceTrueCheckbox,\n};\n\nasync function getAllSeats() {\n  const response = axios.get(\"http://localhost:3000/seats\");\n  return response;\n}\n\nasync function selectPlaceFalseCheckbox() {\n  const numberOfSets = window.localStorage.getItem(\"numberOfSets\");\n  const arraySeats = [];\n  let i = numberOfSets;\n\n  const respo = await getAllSeats();\n  while (i > 0) {\n    const positionY = Math.floor(Math.random() * (15 + 1));\n    const positionX = Math.floor(Math.random() * (11 + 1));\n\n    respo.data.map((item) => {\n      if (item.cords.x == positionX && item.cords.y == positionY) {\n        let field = document.querySelector(`.${item.id}`);\n        if (field && item.reserved === false) {\n          const newObject = { id: item.id, x: item.cords.x, y: item.cords.y };\n          arraySeats.push(newObject);\n          field.style.background = \"chocolate\";\n          i--;\n        }\n      }\n    });\n  }\n  window.localStorage.setItem(\"places\", JSON.stringify(arraySeats));\n}\n\n// async function selectPlaceTrueCheckbox() {\n//   const numberOfSets = window.localStorage.getItem(\"numberOfSets\");\n//   let i = numberOfSets;\n//   let x = 1;\n//   const arraySeats = [];\n//   let indexFirst;\n//   let pom = false;\n\n//   const response = await getAllSeats();\n\n//   let positionY = Math.floor(Math.random() * (15 + 1));\n//   let positionX = Math.floor(Math.random() * (11 + 1));\n\n//   console.log(response.data);\n\n//   while (pom != true) {\n//     response.data.forEach((item, index) => {\n//       if (\n//         item.cords.y == positionY &&\n//         item.reserved == false &&\n//         item.cords.x == positionX\n//       ) {\n//         indexFirst = index;\n//         pom = true;\n//       } else {\n//         positionX = Math.floor(Math.random() * (11 + 1));\n//         positionY = Math.floor(Math.random() * (15 + 1));\n//       }\n//     });\n//   }\n\n//   console.log(response.data[indexFirst]);\n\n//   let pom2 = false\n\n//   for (\n//     let j = indexFirst;\n//     j < indexFirst + Number.parseInt(numberOfSets);\n//     j++\n//   ) {\n//     if (\n//       response.data[j].reserved == false &&\n//       j <= indexFirst + Number.parseInt(numberOfSets)\n//     ) {\n//       let field = document.querySelector(`.${response.data[j].id}`);\n//       const newObject = { id: response.data[j].id, x: response.data[j].cords.x, y: response.data[j].cords.y };\n//       arraySeats.push(newObject);\n//       field.style.background = \"chocolate\";\n\n//     }\n\n//   }\n\n//   window.localStorage.setItem(\"places\", JSON.stringify(arraySeats));\n// }\n\nconst getIndexPlace = async () => {\n  let statusIndex = false;\n  let positionY = Math.floor(Math.random() * (15 + 1));\n  let positionX = Math.floor(Math.random() * (11 + 1));\n  const response = await getAllSeats();\n  let indexFirst;\n\n  while (statusIndex != true) {\n    response.data.forEach((item, index) => {\n      if (\n        item.cords.y == positionY &&\n        item.reserved == false &&\n        item.cords.x == positionX\n      ) {\n        indexFirst = index;\n        statusIndex = true;\n      } else {\n        positionX = Math.floor(Math.random() * (11 + 1));\n        positionY = Math.floor(Math.random() * (15 + 1));\n      }\n    });\n  }\n  return indexFirst;\n};\n\nasync function selectPlaceTrueCheckbox() {\n  let statusFinish = false;\n  let indexPlace = await getIndexPlace();\n  let numberOfSets = Number.parseInt(\n    window.localStorage.getItem(\"numberOfSets\")\n  );\n  const response = await getAllSeats();\n  let positionYFirstElement;\n  let positionYNextElement;\n  let sum;\n  let incrementValue = 0;\n  let arraySeats = [];\n\n  while (statusFinish != true) {\n    for (let i = indexPlace; i < indexPlace + numberOfSets; i++) {\n      positionYFirstElement = Number.parseInt(response.data[i].cords.y);\n      positionYNextElement = Number.parseInt(response.data[i + 1].cords.y);\n      sum = positionYNextElement - positionYFirstElement;\n      if (response.data[i].reserved === false && sum === 1) {\n        const newObject = {\n          id: response.data[i].id,\n          x: response.data[i].cords.x,\n          y: response.data[i].cords.y,\n        };\n        arraySeats.push(newObject)\n        incrementValue +=1\n      }\n      console.log(\"incrementValue\" + incrementValue);\n      console.log(\"numberOfSets\" + numberOfSets);\n      if(incrementValue === numberOfSets){\n        statusFinish = true;\n\n      }else{\n        arraySeats = []\n        indexPlace = await getIndexPlace()\n        incrementValue = 0\n        statusFinish = false\n      }\n    }\n    //statusFinish = true;\n  }\n}\n\nexport default Seats;\n"]},"metadata":{},"sourceType":"module"}