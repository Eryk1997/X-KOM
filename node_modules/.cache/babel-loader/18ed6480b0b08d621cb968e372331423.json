{"ast":null,"code":"import axios from \"axios\";\nconst headers = {\n  \"Content-Type\": \"application/json\"\n};\nconst Seats = {\n  getAllSeats,\n  selectPlace\n};\n\nasync function getAllSeats() {\n  const response = axios.get(\"http://localhost:3000/seats\");\n  return response;\n}\n\nasync function selectPlace() {\n  const numberOfSets = window.localStorage.getItem(\"numberOfSets\");\n  const arraySeats = [];\n  let i = numberOfSets;\n  const respo = await getAllSeats();\n\n  while (i > 0) {\n    const positionY = Math.floor(Math.random() * (15 + 1));\n    const positionX = Math.floor(Math.random() * (11 + 1));\n    console.log(\"position y: \" + positionY);\n    console.log(\"position x: \" + positionX);\n    respo.data.map(item => {\n      if (item.cords.x == positionX && item.cords.y == positionY) {\n        console.log(\"object x,y\" + item.cords.x + \" \" + item.cords.y + \" id \" + item.id);\n        let field = document.querySelector(`.${item.id}`);\n\n        if (field && item.reserved === false) {\n          const newObject = {\n            id: item.id,\n            x: item.cords.x,\n            y: item.cords.y\n          };\n          arraySeats.push(newObject);\n          field.style.background = \"chocolate\";\n          i--;\n        }\n      }\n    });\n  }\n\n  window.localStorage.setItem(\"places\", JSON.stringify(arraySeats));\n  console.log(arraySeats);\n}\n\nexport default Seats;","map":{"version":3,"sources":["/home/eryk/Dokumenty/x-kom/my-app/src/service/Seats.js"],"names":["axios","headers","Seats","getAllSeats","selectPlace","response","get","numberOfSets","window","localStorage","getItem","arraySeats","i","respo","positionY","Math","floor","random","positionX","console","log","data","map","item","cords","x","y","id","field","document","querySelector","reserved","newObject","push","style","background","setItem","JSON","stringify"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG;AACd,kBAAgB;AADF,CAAhB;AAIA,MAAMC,KAAK,GAAG;AACZC,EAAAA,WADY;AAEZC,EAAAA;AAFY,CAAd;;AAKA,eAAeD,WAAf,GAA6B;AAC3B,QAAME,QAAQ,GAAGL,KAAK,CAACM,GAAN,CAAU,6BAAV,CAAjB;AACA,SAAOD,QAAP;AACD;;AAED,eAAeD,WAAf,GAA6B;AAC3B,QAAMG,YAAY,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,cAA5B,CAArB;AACA,QAAMC,UAAU,GAAG,EAAnB;AACA,MAAIC,CAAC,GAAGL,YAAR;AAEA,QAAMM,KAAK,GAAG,MAAMV,WAAW,EAA/B;;AACA,SAAOS,CAAC,GAAG,CAAX,EAAc;AACZ,UAAME,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,KAAK,CAAtB,CAAX,CAAlB;AACA,UAAMC,SAAS,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,KAAK,CAAtB,CAAX,CAAlB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBN,SAA7B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBF,SAA7B;AACAL,IAAAA,KAAK,CAACQ,IAAN,CAAWC,GAAX,CAAgBC,IAAD,IAAU;AACvB,UAAIA,IAAI,CAACC,KAAL,CAAWC,CAAX,IAAgBP,SAAhB,IAA6BK,IAAI,CAACC,KAAL,CAAWE,CAAX,IAAgBZ,SAAjD,EAA4D;AAC1DK,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAeG,IAAI,CAACC,KAAL,CAAWC,CAA1B,GAA8B,GAA9B,GAAoCF,IAAI,CAACC,KAAL,CAAWE,CAA/C,GAAmD,MAAnD,GAA4DH,IAAI,CAACI,EAA7E;AAGA,YAAIC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAwB,IAAGP,IAAI,CAACI,EAAG,EAAnC,CAAZ;;AACA,YAAGC,KAAK,IAAIL,IAAI,CAACQ,QAAL,KAAkB,KAA9B,EAAoC;AAClC,gBAAMC,SAAS,GAAG;AAACL,YAAAA,EAAE,EAAEJ,IAAI,CAACI,EAAV;AAAcF,YAAAA,CAAC,EAAEF,IAAI,CAACC,KAAL,CAAWC,CAA5B;AAA+BC,YAAAA,CAAC,EAAEH,IAAI,CAACC,KAAL,CAAWE;AAA7C,WAAlB;AACAf,UAAAA,UAAU,CAACsB,IAAX,CAAgBD,SAAhB;AACAJ,UAAAA,KAAK,CAACM,KAAN,CAAYC,UAAZ,GAAyB,WAAzB;AACAvB,UAAAA,CAAC;AAEF;AACF;AACF,KAdD;AAeD;;AACDJ,EAAAA,MAAM,CAACC,YAAP,CAAoB2B,OAApB,CAA4B,QAA5B,EAAsCC,IAAI,CAACC,SAAL,CAAe3B,UAAf,CAAtC;AAEAQ,EAAAA,OAAO,CAACC,GAAR,CAAYT,UAAZ;AACD;;AAED,eAAeT,KAAf","sourcesContent":["import axios from \"axios\";\n\nconst headers = {\n  \"Content-Type\": \"application/json\",\n};\n\nconst Seats = {\n  getAllSeats,\n  selectPlace,\n};\n\nasync function getAllSeats() {\n  const response = axios.get(\"http://localhost:3000/seats\");\n  return response;\n}\n\nasync function selectPlace() {\n  const numberOfSets = window.localStorage.getItem(\"numberOfSets\");\n  const arraySeats = [];\n  let i = numberOfSets;\n\n  const respo = await getAllSeats();\n  while (i > 0) {\n    const positionY = Math.floor(Math.random() * (15 + 1));\n    const positionX = Math.floor(Math.random() * (11 + 1));\n    console.log(\"position y: \" + positionY);\n    console.log(\"position x: \" + positionX);\n    respo.data.map((item) => {\n      if (item.cords.x == positionX && item.cords.y == positionY) {\n        console.log(\"object x,y\" + item.cords.x + \" \" + item.cords.y + \" id \" + item.id);\n       \n        \n        let field = document.querySelector(`.${item.id}`)\n        if(field && item.reserved === false){\n          const newObject = {id: item.id, x: item.cords.x, y: item.cords.y}\n          arraySeats.push(newObject);\n          field.style.background = \"chocolate\"\n          i--;\n\n        }\n      }\n    });\n  }\n  window.localStorage.setItem(\"places\", JSON.stringify(arraySeats));\n\n  console.log(arraySeats);\n}\n\nexport default Seats;\n"]},"metadata":{},"sourceType":"module"}