{"ast":null,"code":"import axios from \"axios\";\nconst Seats = {\n  getAllSeats,\n  selectPlaceFalseCheckbox,\n  selectPlaceTrueCheckbox\n};\n\nasync function getAllSeats() {\n  const response = axios.get(\"http://localhost:3000/seats\");\n  return response;\n}\n\nasync function selectPlaceFalseCheckbox() {\n  const numberOfSets = window.localStorage.getItem(\"numberOfSets\");\n  const arraySeats = [];\n  let i = numberOfSets;\n  const obb = {\n    id: 0,\n    x: 1,\n    y: 1\n  };\n  const obb1 = {\n    id: 0,\n    x: 1,\n    y: 2\n  };\n  const testt = [];\n  testt.push(obb);\n  console.log(testt.includes(obb));\n  const response = await getAllSeats();\n\n  while (i > 0) {\n    const positionY = Math.floor(Math.random() * 15);\n    const positionX = Math.floor(Math.random() * 11);\n    response.data.map(item => {\n      if (item.cords.x === positionX && item.cords.y === positionY) {\n        let field = document.querySelector(`.${item.id}`);\n\n        if (field && item.reserved === false) {\n          const newObject = {\n            id: item.id,\n            x: item.cords.x,\n            y: item.cords.y\n          };\n          arraySeats.push(newObject);\n          field.style.background = \"chocolate\";\n          i--;\n        }\n      }\n    });\n  }\n\n  window.localStorage.setItem(\"incrementValue\", arraySeats.length);\n  window.localStorage.setItem(\"places\", JSON.stringify(arraySeats));\n}\n\nconst getIndexPlace = async () => {\n  let statusIndex = false;\n  let positionY = Math.floor(Math.random() * 15);\n  let positionX = Math.floor(Math.random() * 11);\n  const response = await getAllSeats();\n  let indexFirst;\n\n  while (statusIndex !== true) {\n    response.data.forEach((item, index) => {\n      if (item.cords.y === positionY && item.reserved === false && item.cords.x === positionX) {\n        indexFirst = index;\n        statusIndex = true;\n      } else {\n        positionX = Math.floor(Math.random() * 11);\n        positionY = Math.floor(Math.random() * 15);\n      }\n    });\n  }\n\n  return indexFirst;\n};\n\nasync function selectPlaceTrueCheckbox() {\n  let statusFinish = false;\n  let indexPlace = await getIndexPlace();\n  let numberOfSets = Number.parseInt(window.localStorage.getItem(\"numberOfSets\"));\n  const response = await getAllSeats();\n  let positionYFirstElement;\n  let positionYNextElement;\n  let sum;\n  let incrementValue = 0;\n  let arraySeats = [];\n  let whileFindIndex = false;\n\n  while (statusFinish !== true) {\n    while (whileFindIndex !== true) {\n      if (Number.parseInt(indexPlace + numberOfSets) >= response.data.length) {\n        indexPlace = await getIndexPlace();\n      } else {\n        whileFindIndex = true;\n      }\n    }\n\n    whileFindIndex = false;\n\n    for (let i = indexPlace; i < indexPlace + numberOfSets; i++) {\n      positionYFirstElement = Number.parseInt(response.data[i].cords.y);\n      positionYNextElement = Number.parseInt(response.data[i + 1].cords.y);\n      if (i < indexPlace + numberOfSets - 1) sum = positionYNextElement - positionYFirstElement;else sum = 1;\n\n      if (response.data[i].reserved === false && sum === 1) {\n        const newObject = {\n          id: response.data[i].id,\n          x: response.data[i].cords.x,\n          y: response.data[i].cords.y\n        };\n        arraySeats.push(newObject);\n        incrementValue += 1;\n      }\n    }\n\n    if (incrementValue === numberOfSets) {\n      statusFinish = true;\n    } else {\n      arraySeats = [];\n      indexPlace = await getIndexPlace();\n      incrementValue = 0;\n      statusFinish = false;\n    }\n  }\n\n  arraySeats.forEach(e => {\n    const field = document.querySelector(`.${e.id}`);\n    field.style.background = \"chocolate\";\n  });\n  window.localStorage.setItem(\"incrementValue\", arraySeats.length);\n  window.localStorage.setItem(\"places\", JSON.stringify(arraySeats));\n}\n\nexport default Seats;","map":{"version":3,"sources":["/home/eryk/Dokumenty/x-kom/my-app/src/service/Seats.js"],"names":["axios","Seats","getAllSeats","selectPlaceFalseCheckbox","selectPlaceTrueCheckbox","response","get","numberOfSets","window","localStorage","getItem","arraySeats","i","obb","id","x","y","obb1","testt","push","console","log","includes","positionY","Math","floor","random","positionX","data","map","item","cords","field","document","querySelector","reserved","newObject","style","background","setItem","length","JSON","stringify","getIndexPlace","statusIndex","indexFirst","forEach","index","statusFinish","indexPlace","Number","parseInt","positionYFirstElement","positionYNextElement","sum","incrementValue","whileFindIndex","e"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst Seats = {\n  getAllSeats,\n  selectPlaceFalseCheckbox,\n  selectPlaceTrueCheckbox,\n};\n\nasync function getAllSeats() {\n  const response = axios.get(\"http://localhost:3000/seats\");\n  return response;\n}\n\nasync function selectPlaceFalseCheckbox() {\n  const numberOfSets = window.localStorage.getItem(\"numberOfSets\");\n  const arraySeats = [];\n  let i = numberOfSets;\n\n  const obb = {\n    id: 0,\n    x: 1,\n    y: 1\n  }\n\n  const obb1 = {\n    id: 0,\n    x: 1,\n    y: 2\n  }\n\n  const testt = []\n  testt.push(obb)\n  console.log( testt.includes(obb));\n\n\n  const response = await getAllSeats();\n  while (i > 0) {\n    const positionY = Math.floor(Math.random() * 15);\n    const positionX = Math.floor(Math.random() * 11);\n\n    response.data.map((item) => {\n      if (item.cords.x === positionX && item.cords.y === positionY) {\n        let field = document.querySelector(`.${item.id}`);\n        if (field && item.reserved === false) {\n          const newObject = { id: item.id, x: item.cords.x, y: item.cords.y };\n          arraySeats.push(newObject);\n          field.style.background = \"chocolate\";\n          i--;\n        }\n      }\n    });\n  }\n\n  window.localStorage.setItem(\"incrementValue\", arraySeats.length);\n  window.localStorage.setItem(\"places\", JSON.stringify(arraySeats));\n}\n\nconst getIndexPlace = async () => {\n  let statusIndex = false;\n  let positionY = Math.floor(Math.random() * 15);\n  let positionX = Math.floor(Math.random() * 11);\n  const response = await getAllSeats();\n  let indexFirst;\n\n  while (statusIndex !== true) {\n    response.data.forEach((item, index) => {\n      if (\n        item.cords.y === positionY &&\n        item.reserved === false &&\n        item.cords.x === positionX\n      ) {\n        indexFirst = index;\n        statusIndex = true;\n      } else {\n        positionX = Math.floor(Math.random() * 11);\n        positionY = Math.floor(Math.random() * 15);\n      }\n    });\n  }\n  return indexFirst;\n};\n\nasync function selectPlaceTrueCheckbox() {\n  let statusFinish = false;\n  let indexPlace = await getIndexPlace();\n  let numberOfSets = Number.parseInt(\n    window.localStorage.getItem(\"numberOfSets\")\n  );\n  const response = await getAllSeats();\n  let positionYFirstElement;\n  let positionYNextElement;\n  let sum;\n  let incrementValue = 0;\n  let arraySeats = [];\n  let whileFindIndex = false;\n\n  while (statusFinish !== true) {\n    while (whileFindIndex !== true) {\n      if (Number.parseInt(indexPlace + numberOfSets) >= response.data.length) {\n        indexPlace = await getIndexPlace();\n      } else {\n        whileFindIndex = true;\n      }\n    }\n    whileFindIndex = false;\n\n    for (let i = indexPlace; i < indexPlace + numberOfSets; i++) {\n      positionYFirstElement = Number.parseInt(response.data[i].cords.y);\n      positionYNextElement = Number.parseInt(response.data[i + 1].cords.y);\n      if (i < indexPlace + numberOfSets - 1)\n        sum = positionYNextElement - positionYFirstElement;\n      else sum = 1;\n      if (response.data[i].reserved === false && sum === 1) {\n        const newObject = {\n          id: response.data[i].id,\n          x: response.data[i].cords.x,\n          y: response.data[i].cords.y,\n        };\n        arraySeats.push(newObject);\n        incrementValue += 1;\n      }\n    }\n    if (incrementValue === numberOfSets) {\n      statusFinish = true;\n    } else {\n      arraySeats = [];\n      indexPlace = await getIndexPlace();\n      incrementValue = 0;\n      statusFinish = false;\n    }\n  }\n\n  arraySeats.forEach((e) => {\n    const field = document.querySelector(`.${e.id}`);\n    field.style.background = \"chocolate\";\n  });\n\n  window.localStorage.setItem(\"incrementValue\", arraySeats.length);\n  window.localStorage.setItem(\"places\", JSON.stringify(arraySeats));\n}\n\nexport default Seats;\n"]},"metadata":{},"sourceType":"module"}