{"ast":null,"code":"import axios from \"axios\";\nconst headers = {\n  \"Content-Type\": \"application/json\"\n};\nconst Seats = {\n  getAllSeats,\n  selectPlaceFalseCheckbox,\n  selectPlaceTrueCheckbox\n};\n\nasync function getAllSeats() {\n  const response = axios.get(\"http://localhost:3000/seats\");\n  return response;\n}\n\nasync function selectPlaceFalseCheckbox() {\n  const numberOfSets = window.localStorage.getItem(\"numberOfSets\");\n  const arraySeats = [];\n  let i = numberOfSets;\n  const respo = await getAllSeats();\n\n  while (i > 0) {\n    const positionY = Math.floor(Math.random() * 15);\n    const positionX = Math.floor(Math.random() * 11);\n    respo.data.map(item => {\n      if (item.cords.x == positionX && item.cords.y == positionY) {\n        let field = document.querySelector(`.${item.id}`);\n\n        if (field && item.reserved === false) {\n          const newObject = {\n            id: item.id,\n            x: item.cords.x,\n            y: item.cords.y\n          };\n          arraySeats.push(newObject);\n          field.style.background = \"chocolate\";\n          i--;\n        }\n      }\n    });\n  }\n\n  window.localStorage.setItem(\"incrementValue\", arraySeats.length);\n  window.localStorage.setItem(\"places\", JSON.stringify(arraySeats));\n}\n\nconst getIndexPlace = async () => {\n  let statusIndex = false;\n  let positionY = Math.floor(Math.random() * 15);\n  let positionX = Math.floor(Math.random() * 11);\n  const response = await getAllSeats();\n  let indexFirst;\n\n  while (statusIndex != true) {\n    response.data.forEach((item, index) => {\n      if (item.cords.y == positionY && item.reserved == false && item.cords.x == positionX) {\n        indexFirst = index;\n        statusIndex = true;\n      } else {\n        positionX = Math.floor(Math.random() * 11);\n        positionY = Math.floor(Math.random() * 15);\n      }\n    });\n  }\n\n  return indexFirst;\n};\n\nasync function selectPlaceTrueCheckbox() {\n  let statusFinish = false;\n  let indexPlace = await getIndexPlace();\n  let numberOfSets = Number.parseInt(window.localStorage.getItem(\"numberOfSets\"));\n  const response = await getAllSeats();\n  let positionYFirstElement;\n  let positionYNextElement;\n  let sum;\n  let incrementValue = 0;\n  let arraySeats = [];\n\n  while (statusFinish != true) {\n    while (indexPlace > indexPlace + numberOfSets) {\n      indexPlace = await getIndexPlace();\n    }\n\n    for (let i = indexPlace; i < indexPlace + numberOfSets; i++) {\n      positionYFirstElement = Number.parseInt(response.data[i].cords.y);\n      positionYNextElement = Number.parseInt(response.data[i + 1].cords.y);\n      if (i < indexPlace + numberOfSets - 1) sum = positionYNextElement - positionYFirstElement;else sum = 1;\n\n      if (response.data[i].reserved === false && sum === 1) {\n        const newObject = {\n          id: response.data[i].id,\n          x: response.data[i].cords.x,\n          y: response.data[i].cords.y\n        };\n        arraySeats.push(newObject);\n        incrementValue += 1;\n      }\n    }\n\n    if (incrementValue === numberOfSets) {\n      statusFinish = true;\n    } else {\n      arraySeats = [];\n      indexPlace = await getIndexPlace();\n      incrementValue = 0;\n      statusFinish = false;\n    }\n  }\n\n  arraySeats.forEach(e => {\n    const field = document.querySelector(`.${e.id}`);\n    field.style.background = \"chocolate\";\n  });\n  window.localStorage.setItem(\"incrementValue\", arraySeats.length);\n  window.localStorage.setItem(\"places\", JSON.stringify(arraySeats));\n}\n\nexport default Seats;","map":{"version":3,"sources":["/home/eryk/Dokumenty/x-kom/my-app/src/service/Seats.js"],"names":["axios","headers","Seats","getAllSeats","selectPlaceFalseCheckbox","selectPlaceTrueCheckbox","response","get","numberOfSets","window","localStorage","getItem","arraySeats","i","respo","positionY","Math","floor","random","positionX","data","map","item","cords","x","y","field","document","querySelector","id","reserved","newObject","push","style","background","setItem","length","JSON","stringify","getIndexPlace","statusIndex","indexFirst","forEach","index","statusFinish","indexPlace","Number","parseInt","positionYFirstElement","positionYNextElement","sum","incrementValue","e"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst headers = {\n  \"Content-Type\": \"application/json\",\n};\n\nconst Seats = {\n  getAllSeats,\n  selectPlaceFalseCheckbox,\n  selectPlaceTrueCheckbox,\n};\n\nasync function getAllSeats() {\n  const response = axios.get(\"http://localhost:3000/seats\");\n  return response;\n}\n\nasync function selectPlaceFalseCheckbox() {\n  const numberOfSets = window.localStorage.getItem(\"numberOfSets\");\n  const arraySeats = [];\n  let i = numberOfSets;\n\n  const respo = await getAllSeats();\n  while (i > 0) {\n    const positionY = Math.floor(Math.random() * (15));\n    const positionX = Math.floor(Math.random() * (11));\n\n    respo.data.map((item) => {\n      if (item.cords.x == positionX && item.cords.y == positionY) {\n        let field = document.querySelector(`.${item.id}`);\n        if (field && item.reserved === false) {\n          const newObject = { id: item.id, x: item.cords.x, y: item.cords.y };\n          arraySeats.push(newObject);\n          field.style.background = \"chocolate\";\n          i--;\n        }\n      }\n    });\n  }\n\n  window.localStorage.setItem(\"incrementValue\",arraySeats.length)\n  window.localStorage.setItem(\"places\", JSON.stringify(arraySeats));\n}\n\nconst getIndexPlace = async () => {\n  let statusIndex = false;\n  let positionY = Math.floor(Math.random() * (15));\n  let positionX = Math.floor(Math.random() * (11));\n  const response = await getAllSeats();\n  let indexFirst;\n\n  while (statusIndex != true) {\n    response.data.forEach((item, index) => {\n      if (\n        item.cords.y == positionY &&\n        item.reserved == false &&\n        item.cords.x == positionX\n      ) {\n        indexFirst = index;\n        statusIndex = true;\n      } else {\n        positionX = Math.floor(Math.random() * (11));\n        positionY = Math.floor(Math.random() * (15));\n      }\n    });\n  }\n  return indexFirst;\n};\n\nasync function selectPlaceTrueCheckbox() {\n  let statusFinish = false;\n  let indexPlace = await getIndexPlace();\n  let numberOfSets = Number.parseInt(\n    window.localStorage.getItem(\"numberOfSets\")\n  );\n  const response = await getAllSeats();\n  let positionYFirstElement;\n  let positionYNextElement;\n  let sum;\n  let incrementValue = 0;\n  let arraySeats = [];\n  \n\n  while (statusFinish != true) {\n    while(indexPlace > (indexPlace + numberOfSets)){\n      indexPlace = await getIndexPlace()\n    }\n\n    for (let i = indexPlace; i < indexPlace + numberOfSets; i++) {\n      positionYFirstElement = Number.parseInt(response.data[i].cords.y);\n      positionYNextElement = Number.parseInt(response.data[i + 1].cords.y);\n      if(i < (indexPlace + numberOfSets -1))\n        sum = positionYNextElement - positionYFirstElement;\n      else\n        sum = 1\n      if (response.data[i].reserved === false && sum === 1) {\n        const newObject = {\n          id: response.data[i].id,\n          x: response.data[i].cords.x,\n          y: response.data[i].cords.y,\n        };\n        arraySeats.push(newObject);\n        incrementValue += 1;\n      }\n    }\n    if (incrementValue === numberOfSets) {\n      statusFinish = true;\n    } else {\n      arraySeats = [];\n      indexPlace = await getIndexPlace();\n      incrementValue = 0;\n      statusFinish = false;\n    }\n  }\n\n  arraySeats.forEach((e) => {\n    const field = document.querySelector(`.${e.id}`);\n    field.style.background = \"chocolate\";\n  });\n\n  window.localStorage.setItem(\"incrementValue\",arraySeats.length)\n  window.localStorage.setItem(\"places\", JSON.stringify(arraySeats));\n}\n\nexport default Seats;\n"]},"metadata":{},"sourceType":"module"}