{"ast":null,"code":"import axios from \"axios\";\nconst Seats = {\n  getAllSeats,\n  selectPlaceFalseCheckbox,\n  selectPlaceTrueCheckbox\n};\n\nasync function getAllSeats() {\n  const response = axios.get(\"http://localhost:3000/seats\");\n  return response;\n}\n\nasync function selectPlaceFalseCheckbox() {\n  const numberOfSets = window.localStorage.getItem(\"numberOfSets\");\n  const arraySeats = [];\n  let i = numberOfSets;\n  const response = await getAllSeats();\n\n  while (i > 0) {\n    const positionY = Math.floor(Math.random() * 15);\n    const positionX = Math.floor(Math.random() * 11);\n    response.data.map(item => {\n      if (item.cords.x === positionX && item.cords.y === positionY) {\n        let field = document.querySelector(`.${item.id}`);\n\n        if (field && item.reserved === false) {\n          const newObject = {\n            id: item.id,\n            x: item.cords.x,\n            y: item.cords.y\n          };\n\n          if (!arraySeats.includes(newObject)) {\n            arraySeats.push(newObject);\n            field.style.background = \"chocolate\";\n            i--;\n          }\n        }\n      }\n    });\n  }\n\n  window.localStorage.setItem(\"incrementValue\", arraySeats.length);\n  window.localStorage.setItem(\"places\", JSON.stringify(arraySeats));\n}\n\nconst getIndexPlace = async () => {\n  let statusIndex = false;\n  let positionY = Math.floor(Math.random() * 15);\n  let positionX = Math.floor(Math.random() * 11);\n  const response = await getAllSeats();\n  let indexFirst;\n\n  while (statusIndex !== true) {\n    response.data.forEach((item, index) => {\n      if (item.cords.y === positionY && item.reserved === false && item.cords.x === positionX) {\n        indexFirst = index;\n        statusIndex = true;\n      } else {\n        positionX = Math.floor(Math.random() * 11);\n        positionY = Math.floor(Math.random() * 15);\n      }\n    });\n  }\n\n  return indexFirst;\n};\n\nasync function selectPlaceTrueCheckbox() {\n  let statusFinish = false;\n  let indexPlace = await getIndexPlace();\n  let numberOfSets = Number.parseInt(window.localStorage.getItem(\"numberOfSets\"));\n  const response = await getAllSeats();\n  let positionYFirstElement;\n  let positionYNextElement;\n  let sum;\n  let incrementValue = 0;\n  let arraySeats = [];\n  let whileFindIndex = false;\n\n  while (statusFinish !== true) {\n    while (whileFindIndex !== true) {\n      if (Number.parseInt(indexPlace + numberOfSets) >= response.data.length) {\n        indexPlace = await getIndexPlace();\n      } else {\n        whileFindIndex = true;\n      }\n    }\n\n    whileFindIndex = false;\n\n    for (let i = indexPlace; i < indexPlace + numberOfSets; i++) {\n      positionYFirstElement = Number.parseInt(response.data[i].cords.y);\n      positionYNextElement = Number.parseInt(response.data[i + 1].cords.y);\n      if (i < indexPlace + numberOfSets - 1) sum = positionYNextElement - positionYFirstElement;else sum = 1;\n\n      if (response.data[i].reserved === false && sum === 1) {\n        const newObject = {\n          id: response.data[i].id,\n          x: response.data[i].cords.x,\n          y: response.data[i].cords.y\n        };\n        arraySeats.push(newObject);\n        incrementValue += 1;\n      }\n    }\n\n    if (incrementValue === numberOfSets) {\n      statusFinish = true;\n    } else {\n      arraySeats = [];\n      indexPlace = await getIndexPlace();\n      incrementValue = 0;\n      statusFinish = false;\n    }\n  }\n\n  arraySeats.forEach(e => {\n    const field = document.querySelector(`.${e.id}`);\n    field.style.background = \"chocolate\";\n  });\n  window.localStorage.setItem(\"incrementValue\", arraySeats.length);\n  window.localStorage.setItem(\"places\", JSON.stringify(arraySeats));\n}\n\nexport default Seats;","map":{"version":3,"sources":["/home/eryk/Dokumenty/x-kom/my-app/src/service/Seats.js"],"names":["axios","Seats","getAllSeats","selectPlaceFalseCheckbox","selectPlaceTrueCheckbox","response","get","numberOfSets","window","localStorage","getItem","arraySeats","i","positionY","Math","floor","random","positionX","data","map","item","cords","x","y","field","document","querySelector","id","reserved","newObject","includes","push","style","background","setItem","length","JSON","stringify","getIndexPlace","statusIndex","indexFirst","forEach","index","statusFinish","indexPlace","Number","parseInt","positionYFirstElement","positionYNextElement","sum","incrementValue","whileFindIndex","e"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst Seats = {\n  getAllSeats,\n  selectPlaceFalseCheckbox,\n  selectPlaceTrueCheckbox,\n};\n\nasync function getAllSeats() {\n  const response = axios.get(\"http://localhost:3000/seats\");\n  return response;\n}\n\nasync function selectPlaceFalseCheckbox() {\n  const numberOfSets = window.localStorage.getItem(\"numberOfSets\");\n  const arraySeats = [];\n  let i = numberOfSets;\n\n\n  const response = await getAllSeats();\n  while (i > 0) {\n    const positionY = Math.floor(Math.random() * 15);\n    const positionX = Math.floor(Math.random() * 11);\n\n\n    response.data.map((item) => {\n      if (item.cords.x === positionX && item.cords.y === positionY) {\n        let field = document.querySelector(`.${item.id}`);\n        if (field && item.reserved === false) {\n          const newObject = { id: item.id, x: item.cords.x, y: item.cords.y };\n          if(!arraySeats.includes(newObject)){\n            arraySeats.push(newObject);\n            field.style.background = \"chocolate\";\n            i--;\n          }\n            \n          \n        }\n      }\n    });\n  }\n\n  window.localStorage.setItem(\"incrementValue\", arraySeats.length);\n  window.localStorage.setItem(\"places\", JSON.stringify(arraySeats));\n}\n\nconst getIndexPlace = async () => {\n  let statusIndex = false;\n  let positionY = Math.floor(Math.random() * 15);\n  let positionX = Math.floor(Math.random() * 11);\n  const response = await getAllSeats();\n  let indexFirst;\n\n  while (statusIndex !== true) {\n    response.data.forEach((item, index) => {\n      if (\n        item.cords.y === positionY &&\n        item.reserved === false &&\n        item.cords.x === positionX\n      ) {\n        indexFirst = index;\n        statusIndex = true;\n      } else {\n        positionX = Math.floor(Math.random() * 11);\n        positionY = Math.floor(Math.random() * 15);\n      }\n    });\n  }\n  return indexFirst;\n};\n\nasync function selectPlaceTrueCheckbox() {\n  let statusFinish = false;\n  let indexPlace = await getIndexPlace();\n  let numberOfSets = Number.parseInt(\n    window.localStorage.getItem(\"numberOfSets\")\n  );\n  const response = await getAllSeats();\n  let positionYFirstElement;\n  let positionYNextElement;\n  let sum;\n  let incrementValue = 0;\n  let arraySeats = [];\n  let whileFindIndex = false;\n\n  while (statusFinish !== true) {\n    while (whileFindIndex !== true) {\n      if (Number.parseInt(indexPlace + numberOfSets) >= response.data.length) {\n        indexPlace = await getIndexPlace();\n      } else {\n        whileFindIndex = true;\n      }\n    }\n    whileFindIndex = false;\n\n    for (let i = indexPlace; i < indexPlace + numberOfSets; i++) {\n      positionYFirstElement = Number.parseInt(response.data[i].cords.y);\n      positionYNextElement = Number.parseInt(response.data[i + 1].cords.y);\n      if (i < indexPlace + numberOfSets - 1)\n        sum = positionYNextElement - positionYFirstElement;\n      else sum = 1;\n      if (response.data[i].reserved === false && sum === 1) {\n        const newObject = {\n          id: response.data[i].id,\n          x: response.data[i].cords.x,\n          y: response.data[i].cords.y,\n        };\n        arraySeats.push(newObject);\n        incrementValue += 1;\n      }\n    }\n    if (incrementValue === numberOfSets) {\n      statusFinish = true;\n    } else {\n      arraySeats = [];\n      indexPlace = await getIndexPlace();\n      incrementValue = 0;\n      statusFinish = false;\n    }\n  }\n\n  arraySeats.forEach((e) => {\n    const field = document.querySelector(`.${e.id}`);\n    field.style.background = \"chocolate\";\n  });\n\n  window.localStorage.setItem(\"incrementValue\", arraySeats.length);\n  window.localStorage.setItem(\"places\", JSON.stringify(arraySeats));\n}\n\nexport default Seats;\n"]},"metadata":{},"sourceType":"module"}